{"version":3,"sources":["images/test.png","article/article","article sync /^/.//.*$","article/Text.md","images sync /^/.//.*$","utils/util.js","App.js","serviceWorker.js","detail.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","stringToColor","str","hash","i","l","length","charCodeAt","colour","toString","substr","Header","Layout","Content","Meta","Card","App","useState","articles","setArticles","labels","setLabels","articlesContent","setArticlesContent","getArtifactRequest","Request","require","method","useEffect","fetch","then","response","text","as","JSON","parse","ls","forEach","a","push","article","name","className","style","height","textAlign","mode","placeholder","width","margin","Option","value","color","onClick","message","info","padding","to","hoverable","cover","alt","src","imageName","title","chName","description","desc","marginBottom","label","Boolean","window","location","hostname","match","Detail","props","state","articleName","params","articleContent","this","setState","source","React","Component","ReactDOM","render","locale","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"qGAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,qC,oBCA3C,IAAIC,EAAM,CACT,YAAa,IACb,YAAa,KAId,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,sGCvBpBL,EAAOC,QAAU,IAA0B,iC,oBCA3C,IAAIC,EAAM,CACT,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBN,EAAOC,QAAUE,EACjBA,EAAeE,GAAK,K,mLCtBb,SAASU,EAAcC,GAE1B,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGC,EAAIH,EAAII,OAAQF,EAAIC,EAAGD,IACnCD,EAAOD,EAAIK,WAAWH,KAAOD,GAAQ,GAAKA,GAI9C,IADA,IAAIK,EAAS,IACJJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAExBI,GAAU,aADKL,GAAa,EAAJC,EAAU,KACZK,SAAS,KAAOC,QAAQ,GAElD,OAAOF,E,YCHHG,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QACRC,EAASC,IAATD,KA8EOE,MA5Ef,WAAgB,IAAD,EACWC,mBAAS,IADpB,gCAEqBA,mBAAS,KAF9B,mBAEJC,EAFI,KAEMC,EAFN,OAGiBF,mBAAS,IAH1B,mBAGJG,EAHI,KAGIC,EAHJ,OAImCJ,mBAAS,IAJ5C,mBAIJK,EAJI,KAIaC,EAJb,KASLC,EAAqB,IAAIC,QAAQC,EAAQ,KAAsB,CACjEC,OAAQ,QA+BZ,OA5BAC,qBAAU,WACNC,MAAML,GAAoBM,MAAK,SAACC,GAC5B,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GACJ,IAAMC,EAAKC,KAAKC,MAAMH,GACtBb,EAAYc,GACZ,IAAMG,EAAK,GACXH,EAAGI,SAAQ,SAAAC,GACPA,EAAElB,OAAOiB,SAAQ,SAAAhC,GAAC,OAAE+B,EAAGG,KAAKlC,SAEhCgB,EAAUe,QAEhB,IAEFR,qBAAU,WACNV,EAASmB,SAAQ,SAAAG,GACbX,MAAM,IAAIJ,QAAQC,OAAQ,YAAac,EAAQC,OAAS,CACpDd,OAAQ,SACRG,MAAK,SAACC,GACN,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GACJ,IAAIC,EAAK,GACTA,EAAGM,KAAKjB,GACRW,EAAGM,KAAKP,GACRT,EAAmBU,WAG7B,CAACf,IAEC,kBAAC,IAAD,KACI,kBAACP,EAAD,CAAQ+B,UAAU,SAASC,MAAO,CAACC,OAAO,GAAIC,UAAU,WACpD,kBAAC,IAAD,CACIC,KAAK,WACLC,YAAY,6CACZL,UAAU,SACVC,MAAO,CAAEK,MAAO,IAAIC,OAAQ,KAE3B7B,EAAOhC,KAAI,SAAAiB,GAAC,OAAI,kBAAC,IAAO6C,OAAR,CAAeC,MAAO9C,GAAG,kBAAC,IAAD,CAAK+C,MAAOnD,EAAcI,IAAKA,GAAxD,SAErB,kBAAC,IAAD,CAAQgD,QA9CH,WACbC,IAAQC,KAAK,0CA6CL,iBAEJ,kBAAC1C,EAAD,CAAS8B,MAAO,CAACC,OAAQ,IAAMY,QAAS,IAAKd,UAAU,WAIlDxB,EAAS9B,KAAI,SAAAoD,GAAO,OACjB,kBAAC,IAAD,CAAMiB,GAAE,kBAAajB,EAAQC,OACzB,kBAAC,IAAD,CACIiB,WAAS,EACTf,MAAO,CAAEK,MAAO,KAChBW,MAAO,yBAAKC,IAAI,UAAUC,IAAKnC,OAAQ,YAAYc,EAAQsB,eAE3D,kBAAChD,EAAD,CAAMiD,MAAOvB,EAAQwB,OAAQC,YAAazB,EAAQ0B,KAAMvB,MAAO,CAACwB,aAAa,KAC7E,8BAAO3B,EAAQpB,OAAOhC,KAAI,SAAAgF,GAAK,OAAE,kBAAC,IAAD,CAAKhB,MAAOnD,EAAcmE,IAASA,eCjE5EC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wCCbE9D,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEK6D,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAM,CACPC,YAAY,EAAKF,MAAMF,MAAMK,OAAOrC,KACpCsC,eAAgB,MAJL,E,gEAOE,IAAD,OACVF,EAAcG,KAAKJ,MAAMC,YAC/BhD,MAAM,IAAIJ,QAAQC,OAAQ,YAAamD,IAAgB,CACnDlD,OAAQ,SACRG,MAAK,SAACC,GACN,OAAOA,EAASC,UACjBF,MAAK,SAAAE,GACJ,EAAKiD,SAAS,CACVF,eAAe/C,S,+BAMvB,OACI,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAQU,UAAU,SAASC,MAAO,CAACC,OAAO,GAAIC,UAAU,WACpD,kBAAC,IAAD,CAAMY,GAAG,SAAT,iBAEJ,kBAAC,EAAD,CAASd,MAAO,CAACC,OAAQ,IAAMY,QAAS,IAAKd,UAAU,WACnD,kBAAC,IAAD,CAAewC,OAAQF,KAAKJ,MAAMG,uB,GA5BlBI,IAAMC,W,gBCuB1CC,IAASC,OApBD,yBAAK5C,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgB6C,OAAQ,gBACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIC,KAAK,IACLF,OAAQ,kBACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOG,OAAK,EAACD,KAAK,QAAQE,UAAW1E,IACrC,kBAAC,IAAD,CAAOyE,OAAK,EAACD,KAAK,gBAAgBE,UAAWhB,YAYpEiB,SAASC,eAAe,SFoG/B,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM7C,c","file":"static/js/main.77d49b88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.012d49ee.png\";","module.exports = __webpack_public_path__ + \"static/media/article.6f764b8a.bin\";","var map = {\n\t\"./Text.md\": 298,\n\t\"./article\": 117\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 118;","module.exports = __webpack_public_path__ + \"static/media/Text.3d9baa90.md\";","var map = {\n\t\"./test.png\": 107\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 306;","export function stringToColor(str) {\n    let hash = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    let colour = '#';\n    for (let i = 0; i < 3; i++) {\n        const value = (hash >> (i * 8)) & 0xFF;\n        colour += (`00${value.toString(16)}`).substr(-2);\n    }\n    return colour;\n}","import React, {useEffect, useState} from 'react';\nimport {Avatar, Button, Card, Input, Layout, List, message, Progress, Select, Space, Tag} from \"antd\";\nimport { MessageOutlined, LikeOutlined, StarOutlined } from '@ant-design/icons';\nimport ReactMarkdown from 'react-markdown';\nimport testImage from \"./images/test.png\"\nimport \"./App.css\"\nimport {stringToColor} from \"./utils/util\";\nimport {Link} from \"react-router-dom\";\nconst { Header, Content } = Layout;\nconst { Meta } = Card;\n\nfunction App() {\n    const [str, setStr] = useState(\"\");\n    const [articles, setArticles] = useState([]);\n    const [labels, setLabels] = useState([]);\n    const [articlesContent, setArticlesContent] = useState([]);\n\n    const hanldeOk = () => {\n        message.info(\"你输入的啥？\")\n    };\n    const getArtifactRequest = new Request(require('./article/article'), {\n        method: 'GET',\n    });\n\n    useEffect(()=>{\n        fetch(getArtifactRequest).then((response) => {\n            return response.text()\n        }).then(text=>{\n            const as = JSON.parse(text);\n            setArticles(as);\n            const ls = [];\n            as.forEach(a=>{\n                a.labels.forEach(l=>ls.push(l))\n            });\n            setLabels(ls);\n        });\n    },[]);\n\n    useEffect(()=>{\n        articles.forEach(article => {\n            fetch(new Request(require(`./article/${article.name}`), {\n                method: 'GET',\n            })).then((response) => {\n                return response.text()\n            }).then(text => {\n                var as = [];\n                as.push(articlesContent);\n                as.push(text);\n                setArticlesContent(as);\n            });\n        });\n    },[articles]);\n    return (\n        <Layout>\n            <Header className='header' style={{height:80, textAlign:\"center\"}}>\n                <Select\n                    mode=\"multiple\"\n                    placeholder=\"选择标签以过滤\"\n                    className='shadow'\n                    style={{ width: 300,margin: 20 }}\n                >\n                    {labels.map(l => <Select.Option value={l}><Tag color={stringToColor(l)}>{l}</Tag> </Select.Option>)}\n                </Select>\n                <Button onClick={hanldeOk}>确定</Button>\n            </Header>\n            <Content style={{height: 1000, padding: 20}} className='content'>\n                {/*<div style={{height:800}}>*/}\n                {/*    {articlesContent.map(content => <div style={{height:100}}><ReactMarkdown source={content}/></div>)}*/}\n                {/*</div>*/}\n                {articles.map(article=>\n                    <Link to={`/detail/${article.name}`}>\n                        <Card\n                            hoverable\n                            style={{ width: 240 }}\n                            cover={<img alt=\"example\" src={require(`./images/${article.imageName}`)} />}\n                        >\n                            <Meta title={article.chName} description={article.desc} style={{marginBottom:5}}/>\n                            <span>{article.labels.map(label=><Tag color={stringToColor(label)}>{label}</Tag>)}</span>\n                        </Card>\n                    </Link>\n\n                )}\n            </Content>\n        </Layout>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport {Button, Layout, Select, Tag} from \"antd\";\nimport {stringToColor} from \"./utils/util\";\nimport {Link} from \"react-router-dom\";\nconst { Header, Content } = Layout;\n\nexport default class Detail extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            articleName:this.props.match.params.name,\n            articleContent: null,\n        }\n    }\n    componentDidMount() {\n        const articleName = this.state.articleName\n        fetch(new Request(require(`./article/${articleName}`), {\n            method: 'GET',\n        })).then((response) => {\n            return response.text()\n        }).then(text => {\n            this.setState({\n                articleContent:text\n            })\n        });\n    }\n\n    render() {\n        return (\n            <Layout>\n                <Header className='header' style={{height:40, textAlign:\"center\"}}>\n                    <Link to='/blog'>首页</Link>\n                </Header>\n                <Content style={{height: 1000, padding: 20}} className='content'>\n                    <ReactMarkdown source={this.state.articleContent}/>\n                </Content>\n            </Layout>\n\n        )\n    }\n }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Detail from \"./detail\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport {ConfigProvider} from \"antd\";\nfunction Index() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <ConfigProvider locale={\"antdCNLocale\"}>\n                    <Switch>\n                        <Route\n                            path=\"/\"\n                            render={() => (\n                                <Switch>\n                                    <Route exact path=\"/blog\" component={App}/>\n                                    <Route exact path=\"/detail/:name\" component={Detail}/>\n                                </Switch>\n                            )}\n                        />\n                    </Switch>\n                </ConfigProvider>\n            </Router>\n        </div>\n    );\n}\n\nReactDOM.render(\n    Index(), document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}